#!/bin/csh -f
# blobmeans_scriptD: shell script
# 06.01.94 by Francois Lalonde, Ph.D., Laboratory of Cognitive Sciences,
# & Jose' Ma. Maisog, M.D., Laboratory of Psychology and Psychopathology,
# both of the National Institute of Mental Health

# C executables called: clustermean16bit, div

# Also calls C shell script scroll

# READ IN 16-BIT CLUSTER IMAGE NAME.
scroll 10
echo  ""
echo '******************************************************'
echo  ""
echo Note: This script was co-written by 
echo François Lalonde, Ph.D, NIH/NIMH/LCS, and
echo José Ma. Maisog, M.D., NIH/NIMH/LPP.
echo It calls C-executables written by
echo José Ma. Maisog, M.D., NIH/NIMH/LPP.
echo ""
echo This script will extract mean values of a given blob\/cluster
echo from the ORIGINAL fMR images.  A ratio correction for global
echo flow will be done.  The outer loop will be done over runs;
echo the inner loop is done over scans within runs.
echo ""
echo The original fMR images are assumed to have the following
echo naming convention:
echo ""
echo "      <fileroot><run_no><scan_str>.img"
echo""
echo where
echo ""
echo "  fileroot is an arbitrary character string, e.g., Rmri"
echo "  run_no is a number indicating the run number, e.g., 5"
echo "  scan_str is a character string indicating the scan"
echo "  scan , e.g., ctl003"

# Query user for directory
scroll 10
echo  ""
echo '******************************************************'
echo  ""
echo -n "Enter the name of the directory containing data files: "
set dir = $<
while (! -d $dir)
    echo Directory $dir does not exist.
    echo ""
    echo -n "Enter the name of the directory containing data files: "
    set dir = $<
end
cd $dir
touch fidap.log
echo '******************************************************' >> fidap.log
echo `date` " : " $user " : " blobmeans_scriptD >> fidap.log
echo "The following lines are EXACTLY as you've typed them into the script:" >> fidap.log

# QUERY USER FOR 8-BIT MASK USED FOR CALCULATING GLOBAL MEAN
echo ""
echo First, you must enter the name of an 8-bit mask which
echo will be used for calculating the global mean intensity
echo of the 16-bit fMR images, including .img extension.
echo ""
echo -n "Enter the name of the 8-bit mask: "
set maskfile = $<
while (! -e $maskfile)
    echo $maskfile does not exist.
    echo ""
    echo -n "Enter the name of the 8-bit mask: "
    set maskfile = $<
end
echo $maskfile >> fidap.log

# QUERY USER FOR 16-BIT CLUSTER IMAGE
echo ""
echo First, you must indicate the name of the 16-bit cluster
echo image.  If this was generated by the blobs module of fidap,
echo this should have a name beginning with \"Wblobs\".
echo ""
echo -n "Enter the 16-bit cluster image name: "
set cluster_img_name = $<
while (! -e $cluster_img_name)
    echo $cluster_img_name does not exist.
    echo ""
    echo -n "Enter the 16-bit cluster image name: "
    set cluster_img_name = $<
end
echo $cluster_img_name >> fidap.log

# READ IN CLUSTER VALUE AND CREATE A TEXT FILE.
echo ""
echo -n "Enter the number of the cluster: "
set cluster_num = $<
echo $cluster_num >> fidap.log
if ( -e blobmeans$cluster_num.txt ) rm blobmeans$cluster_num.txt
touch blobmeans$cluster_num.txt

# READ IN FILE ROOT NAME.
echo ""
echo -n "Enter the file root name: "
set fileroot = $<
echo $fileroot >> fidap.log

# READ IN THE NUMBER OF RUNS.
echo ""
echo -n "Enter the number of runs: "
set run_limit = $<
echo $run_limit >> fidap.log

# LOAD SHELL VARIABLE SCAN_STR WITH SCAN STRINGS OF INTEREST.
# The '\' is a continuation symbol.
echo ""
echo Now you must enter text file containing list of scan strings.
echo Or type Carriage Return for default values.
echo The default list has 20 elements and is:
echo ""
echo "  006 007 008 009 011 012 013 014 017 018 019 020 022 023 024 025 028 029 030 031"
echo ""
echo -n "Now you must enter text file containing list of scan strings: "
set scan_file = $<
echo $scan_file >> fidap.log
set num_of_chars = $#scan_file
echo ""
if ($num_of_chars == 0) then
    set scan_strs = (006 007 008 009 011 012 013 014 017 018 019 020 022\
					023 024 025 028 029 030 031)
else
    set scan_strs = `cat $scan_file`
endif
set num_of_scans = $#scan_strs
echo Here are the $num_of_scans scan strings:
echo $scan_strs

echo ""
echo '******************************************************'
echo ""
echo Finally, you must type in a number between 0 and 19.
echo The \'nice\' command will use this number to adjust
echo the priority of this process.  \'0\' will result in
echo the default priority being used.  Higher numbers will
echo result in lower priorities.  We recommend \'0\' to be
echo used during off hours, and higher \(nicer\) numbers to
echo be used during regular work hours.
echo ""
echo -n "Priority adjustment number? "
set priority = $<
if ($priority == "") then
    set priority = 0
endif
echo $priority >> fidap.log

# EXPLAIN OUTPUT FORMAT TO USER
echo ""
echo Now about to generate text file blobmeans$cluster_num.txt.
echo blobmeans$cluster_num.txt will have one line per run.
echo Each line will have several numbers, one number for each
echo scan in that run\; this number will be the corrected mean
echo for the cluster in that scan.
echo ""
echo Thus, if you have 3 runs, with 20 scans per run, there
echo will be 3 lines, each with 20 numbers.
echo ""
echo -n "Continue <y/n>? "
set choice = $<
if ($choice != "y") then
    echo QUITTING SHELL SCRIPT....
    sleep 2
    exit
endif

# LOOP OVER RUNS.  INITIALIZE SHELL VARIABLE run_index TO 1.
@ run_index = 1
while ($run_index <= $run_limit)

    # INITIALIZE OUTLINE
    unset outline
    set outline

    # LOOP OVER SCAN NUMBERS.  INITIALIZE SHELL VARIABLE scan_index TO 1.
    @ scan_index = 1
    while ($scan_index <= $num_of_scans)

	# DETERMINE FILE NAME, GIVEN run_index AND scan_index.
	set filename = $fileroot$run_index$scan_strs[$scan_index].img

	# GET CLUSTERMEAN FROM THE CLUSTER SPECIFIED
	# IN RUN SPECIFIED BY CURRENT run_index NUMBER
	# IN SCAN SPECIFIED BY CURRENT scan_index NUMBER.
	set clmean = `nice -$priority clustermean16bit $cluster_img_name $cluster_num $filename`

	# CALCULATE MEAN OF IMAGE
	set volmean = `nice -$priority mean16bit $filename $maskfile`

	# CALCULATE CORRECTED MEAN
	# THIS IS JUST THE RAW CLUSTER MEAN DIVIDED BY THE GLOBAL MEAN
	echo div $clmean $volmean
	set correct_mean = `div $clmean $volmean`

	# APPEND CORRECTED MEAN ONTO outline
	set outline = ($outline $correct_mean)

	# Increment scan_index
	@ scan_index++

    end

    # OUTPUT OUTLINE TO BOTH SCREEN AND TO TEXT FILE blobmeans$cluster_num.txt
    echo $outline
    echo $outline >> blobmeans$cluster_num.txt

    # Increment run_index
    @ run_index++

end

